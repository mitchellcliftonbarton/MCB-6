import { c as create_ssr_component, a as add_attribute, v as validate_component, f as createEventDispatcher, e as escape, h as add_styles, o as onDestroy, d as each, m as missing_component } from "../../chunks/ssr.js";
import { P as PortableText, c as components, g as getImageData } from "../../chunks/utils2.js";
import { n as null_to_empty } from "../../chunks/utils.js";
import "../../chunks/client2.js";
import "../../chunks/globalStore.js";
import { L as LeftArrow, R as RightArrow } from "../../chunks/RightArrow.js";
const HomeTextItem = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { item } = $$props;
  const { columnCount, text } = item;
  const widthClass = columnCount !== "" ? `col-span-${columnCount}` : "col-span-3";
  if ($$props.item === void 0 && $$bindings.item && item !== void 0)
    $$bindings.item(item);
  return `<div${add_attribute("class", `${widthClass} enter-in-1`, 0)}><div class="sticky-block p-base border border-light-grey rich-text">${validate_component(PortableText, "PortableText").$$render($$result, { value: text, components }, {}, {})}</div></div>`;
});
const Plus = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<svg class="plus-icon" viewBox="0 0 7 7" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M3.45 0V7" stroke="currentColor" stroke-width="0.4"></path><path d="M0 3.45L7 3.45" stroke="currentColor" stroke-width="0.4"></path></svg>`;
});
const css$2 = {
  code: ".home-image-item.svelte-1lodcm9.svelte-1lodcm9{display:block;position:relative}.image-hover.svelte-1lodcm9.svelte-1lodcm9{opacity:0;background:var(--primary);mix-blend-mode:screen;transition:opacity 0.3s}.plus.svelte-1lodcm9.svelte-1lodcm9{background-color:var(--white);opacity:1;position:absolute;bottom:0px;left:50%;transform:translateX(-50%);@media screen and (min-width: 1024px) {\n			opacity: 0;\n			bottom: auto;\n			top: 50%;\n			left: 50%;\n			transform: translate(-50%, -50%);\n		}}.plus.svelte-1lodcm9 .plus-icon{width:1rem;@media screen and (min-width: 1024px) {\n			width: 10rem;\n		}}@media screen and (min-width: 1024px){.home-image-item.svelte-1lodcm9 a:hover .plus.svelte-1lodcm9{opacity:1}}",
  map: `{"version":3,"file":"HomeImageItem.svelte","sources":["HomeImageItem.svelte"],"sourcesContent":["<script>\\n\\timport { goto } from '$app/navigation';\\n\\timport { PortableText } from '@portabletext/svelte';\\n\\timport { components } from '$lib/utils';\\n\\timport { createEventDispatcher } from 'svelte';\\n\\timport Plus from './Plus.svelte';\\n\\timport { isLargeQuery } from '$lib/stores/globalStore';\\n\\n\\t// props\\n\\texport let item;\\n\\n\\t// destructuring item\\n\\tconst { slug, columnCount, text, imageData, alt } = item;\\n\\n\\t// setting width class\\n\\tconst widthClass =\\n\\t\\tcolumnCount !== '' ? \`col-span-12 lg:col-span-\${columnCount}\` : 'col-span-12 lg:col-span-3';\\n\\n\\t// setup event dispatcher\\n\\tconst dispatch = createEventDispatcher();\\n\\n\\t// link element\\n\\tlet linkEl;\\n\\n\\t// function to handle click\\n\\tfunction handleClick(event) {\\n\\t\\tevent.preventDefault();\\n\\n\\t\\t// get the targets href\\n\\t\\tconst href = linkEl.href;\\n\\n\\t\\t// programmatically navigate to the href\\n\\t\\tgoto(href, {\\n\\t\\t\\tnoScroll: true\\n\\t\\t});\\n\\n\\t\\t// dispatch the event\\n\\t\\tdispatch('imageClicked', item);\\n\\t}\\n<\/script>\\n\\n<div class={\`home-image-item enter-in-1 px-8 lg:px-[10vw] \${widthClass}\`}>\\n\\t<a href={\`/?detail=\${slug.current}\`} on:click={handleClick} bind:this={linkEl}>\\n\\t\\t<figure class=\\"sticky-block\\">\\n\\t\\t\\t<div style:aspect-ratio={imageData.aspectRatio} class=\\"relative bg-grey-1\\">\\n\\t\\t\\t\\t<img\\n\\t\\t\\t\\t\\tdata-srcset={imageData.srcset}\\n\\t\\t\\t\\t\\tsizes={imageData.sizes}\\n\\t\\t\\t\\t\\t{alt}\\n\\t\\t\\t\\t\\tfetchpriority=\\"high\\"\\n\\t\\t\\t\\t\\tclass=\\"lazyload media-cover\\"\\n\\t\\t\\t\\t/>\\n\\n\\t\\t\\t\\t<div class=\\"image-hover fill-parent\\"></div>\\n\\n\\t\\t\\t\\t<div class=\\"plus\\">\\n\\t\\t\\t\\t\\t<Plus />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<figcaption class=\\"mt-3 lg:px-base flex justify-center items-start text-center leading-tight\\">\\n\\t\\t\\t\\t<PortableText value={text} {components} />\\n\\t\\t\\t</figcaption>\\n\\t\\t</figure>\\n\\t</a>\\n</div>\\n\\n<style>\\n\\t.home-image-item {\\n\\t\\tdisplay: block;\\n\\t\\tposition: relative;\\n\\t}\\n\\n\\t.image-hover {\\n\\t\\topacity: 0;\\n\\t\\tbackground: var(--primary);\\n\\t\\tmix-blend-mode: screen;\\n\\t\\ttransition: opacity 0.3s;\\n\\t}\\n\\n\\t.plus {\\n\\t\\tbackground-color: var(--white);\\n\\t\\topacity: 1;\\n\\t\\tposition: absolute;\\n\\t\\tbottom: 0px;\\n\\t\\tleft: 50%;\\n\\t\\ttransform: translateX(-50%);\\n\\n\\t\\t@media screen and (min-width: 1024px) {\\n\\t\\t\\topacity: 0;\\n\\t\\t\\tbottom: auto;\\n\\t\\t\\ttop: 50%;\\n\\t\\t\\tleft: 50%;\\n\\t\\t\\ttransform: translate(-50%, -50%);\\n\\t\\t}\\n\\t}\\n\\n\\t.plus :global(.plus-icon) {\\n\\t\\twidth: 1rem;\\n\\n\\t\\t@media screen and (min-width: 1024px) {\\n\\t\\t\\twidth: 10rem;\\n\\t\\t}\\n\\t}\\n\\n\\t@media screen and (min-width: 1024px) {\\n\\t\\t.home-image-item a:hover .plus {\\n\\t\\t\\topacity: 1;\\n\\t\\t}\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAoEC,8CAAiB,CAChB,OAAO,CAAE,KAAK,CACd,QAAQ,CAAE,QACX,CAEA,0CAAa,CACZ,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,IAAI,SAAS,CAAC,CAC1B,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,OAAO,CAAC,IACrB,CAEA,mCAAM,CACL,gBAAgB,CAAE,IAAI,OAAO,CAAC,CAC9B,OAAO,CAAE,CAAC,CACV,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CACX,IAAI,CAAE,GAAG,CACT,SAAS,CAAE,WAAW,IAAI,CAAC,CAE3B,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAC,CAAC;AACxC,GAAG,SAAS,CAAC;AACb,GAAG,QAAQ,IAAI;AACf,GAAG,KAAK,GAAG;AACX,GAAG,MAAM,GAAG;AACZ,GAAG,WAAW,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC;AACnC,GACC,CAEA,oBAAK,CAAS,UAAY,CACzB,KAAK,CAAE,IAAI,CAEX,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAC,CAAC;AACxC,GAAG,OAAO,KAAK;AACf,GACC,CAEA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACrC,+BAAgB,CAAC,CAAC,MAAM,CAAC,oBAAM,CAC9B,OAAO,CAAE,CACV,CACD"}`
};
const HomeImageItem = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { item } = $$props;
  const { slug, columnCount, text, imageData, alt } = item;
  const widthClass = columnCount !== "" ? `col-span-12 lg:col-span-${columnCount}` : "col-span-12 lg:col-span-3";
  createEventDispatcher();
  let linkEl;
  if ($$props.item === void 0 && $$bindings.item && item !== void 0)
    $$bindings.item(item);
  $$result.css.add(css$2);
  return `<div class="${escape(null_to_empty(`home-image-item enter-in-1 px-8 lg:px-[10vw] ${widthClass}`), true) + " svelte-1lodcm9"}"><a${add_attribute("href", `/?detail=${slug.current}`, 0)}${add_attribute("this", linkEl, 0)}><figure class="sticky-block"><div class="relative bg-grey-1"${add_styles({ "aspect-ratio": imageData.aspectRatio })}><img${add_attribute("data-srcset", imageData.srcset, 0)}${add_attribute("sizes", imageData.sizes, 0)}${add_attribute("alt", alt, 0)} fetchpriority="high" class="lazyload media-cover"> <div class="image-hover fill-parent svelte-1lodcm9"></div> <div class="plus svelte-1lodcm9">${validate_component(Plus, "Plus").$$render($$result, {}, {}, {})}</div></div> <figcaption class="mt-3 lg:px-base flex justify-center items-start text-center leading-tight">${validate_component(PortableText, "PortableText").$$render($$result, { value: text, components }, {}, {})}</figcaption></figure></a> </div>`;
});
const XAlt = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<svg class="x-alt-icon" viewBox="0 0 6 6" fill="none" xmlns="http://www.w3.org/2000/svg" vector-effect="non-scaling-stroke"><path d="M0.786926 1.2356L5.71315 5.26454" stroke="currentColor" stroke-width="0.4"></path><path d="M5.65958 1.17194L0.840311 5.32822" stroke="currentColor" stroke-width="0.4"></path></svg>`;
});
const css$1 = {
  code: ".carousel.svelte-rvfxct.svelte-rvfxct{z-index:5000;opacity:0;transition:opacity 0.3s;pointer-events:none}.carousel.open.svelte-rvfxct.svelte-rvfxct{opacity:1;pointer-events:auto}.closer.svelte-rvfxct svg{width:1.8rem;@media screen and (min-width: 1024px) {\n			width: 2.5rem;\n		}}.arrow.svelte-rvfxct.svelte-rvfxct{transition:color 0.3s}.arrow.svelte-rvfxct svg{width:1.5rem;@media screen and (min-width: 1024px) {\n			width: 3rem;\n		}}@media screen and (min-width: 1024px){.arrow.svelte-rvfxct.svelte-rvfxct:hover{color:var(--primary)}}.indexes.svelte-rvfxct.svelte-rvfxct,.captions.svelte-rvfxct.svelte-rvfxct{opacity:0;transition:opacity 0.3s}.embla.svelte-rvfxct.svelte-rvfxct{overflow:hidden;position:absolute;top:0px;left:0px;width:100%;height:100%;opacity:0;transition:opacity 0.3s}.carousel.carousel-init.svelte-rvfxct .embla.svelte-rvfxct,.carousel.carousel-init.svelte-rvfxct .captions.svelte-rvfxct,.carousel.carousel-init.svelte-rvfxct .indexes.svelte-rvfxct{opacity:1}.embla__container.svelte-rvfxct.svelte-rvfxct{display:flex;position:absolute;top:0px;left:0px;width:100%;height:100%}.embla__slide.svelte-rvfxct.svelte-rvfxct{flex:0 0 100%;min-width:0;margin-right:15vw;margin-left:15vw;@media screen and (min-width: 1024px) {\n			margin-right: 0;\n			margin-left: 0;\n		}}",
  map: `{"version":3,"file":"HomeCarousel.svelte","sources":["HomeCarousel.svelte"],"sourcesContent":["<script>\\n\\timport { goto } from '$app/navigation';\\n\\timport { PortableText } from '@portabletext/svelte';\\n\\timport { components } from '$lib/utils';\\n\\timport { createEventDispatcher, onMount, onDestroy } from 'svelte';\\n\\timport LeftArrow from './LeftArrow.svelte';\\n\\timport RightArrow from './RightArrow.svelte';\\n\\timport XAlt from './XAlt.svelte';\\n\\timport EmblaCarousel from 'embla-carousel';\\n\\n\\t// -------------------------\\n\\t// Data\\n\\t// -------------------------\\n\\n\\texport let carouselOpen, imageItems, detail;\\n\\tconst dispatch = createEventDispatcher();\\n\\n\\t// -------------------------\\n\\t// Setup Embla\\n\\t// -------------------------\\n\\n\\tlet emblaEl, emblaApi;\\n\\tlet currentIndex = 1;\\n\\tlet carouselInit = false;\\n\\n\\tfunction onSelect() {\\n\\t\\t// get the index\\n\\t\\tconst index = emblaApi.selectedScrollSnap();\\n\\n\\t\\t// check if there is a url param for detail\\n\\t\\tconst urlParams = new URLSearchParams(window.location.search);\\n\\t\\tconst detail = urlParams.get('detail');\\n\\n\\t\\tif (detail) {\\n\\t\\t\\tgoto(\`/?detail=\${imageItems[index].slug.current}\`, {\\n\\t\\t\\t\\tnoScroll: true\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// set the current index\\n\\t\\tcurrentIndex = index + 1;\\n\\t}\\n\\n\\tonMount(() => {\\n\\t\\tif (emblaEl) {\\n\\t\\t\\tlet detailIndex = false;\\n\\n\\t\\t\\tif (detail) {\\n\\t\\t\\t\\tconst imageDetailIndex = imageItems.findIndex((item) => item.slug.current === detail);\\n\\n\\t\\t\\t\\tif (imageDetailIndex !== -1) {\\n\\t\\t\\t\\t\\tdocument.body.style.overflow = 'hidden';\\n\\t\\t\\t\\t\\tdetailIndex = imageDetailIndex;\\n\\t\\t\\t\\t\\tcurrentIndex = detailIndex + 1;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t// send to 404\\n\\t\\t\\t\\t\\tgoto('/404');\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\temblaApi = EmblaCarousel(emblaEl, {\\n\\t\\t\\t\\tloop: true,\\n\\t\\t\\t\\tdragThreshold: 10,\\n\\t\\t\\t\\tduration: 20,\\n\\t\\t\\t\\tstartIndex: detailIndex ? detailIndex : 0\\n\\t\\t\\t});\\n\\n\\t\\t\\temblaApi.on('init', () => {\\n\\t\\t\\t\\tcarouselInit = true;\\n\\t\\t\\t});\\n\\n\\t\\t\\temblaApi.on('select', onSelect);\\n\\n\\t\\t\\t/*\\n\\t\\t\\tHandle popstate\\n\\t\\t\\t*/\\n\\n\\t\\t\\twindow.addEventListener('popstate', () => {\\n\\t\\t\\t\\t// get URL params\\n\\t\\t\\t\\tconst urlParams = new URLSearchParams(window.location.search);\\n\\t\\t\\t\\tconst detail = urlParams.get('detail');\\n\\n\\t\\t\\t\\tif (detail) {\\n\\t\\t\\t\\t\\tconst index = imageItems.findIndex((item) => item.slug.current === detail);\\n\\n\\t\\t\\t\\t\\tif (carouselOpen) {\\n\\t\\t\\t\\t\\t\\t// console.log('popstate, carousel was open, scroll to index');\\n\\t\\t\\t\\t\\t\\temblaApi.scrollTo(index);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t// console.log('popstate, carousel was closed, jump to index and open');\\n\\t\\t\\t\\t\\t\\temblaApi.scrollTo(index, true);\\n\\t\\t\\t\\t\\t\\tdispatch('setCarouselOpen', true);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t// console.log('popstate, no detail, close');\\n\\t\\t\\t\\t\\tdispatch('setCarouselOpen', false);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\t});\\n\\n\\tonDestroy(() => {\\n\\t\\tif (emblaApi) {\\n\\t\\t\\temblaApi.off('select', onSelect);\\n\\t\\t\\temblaApi.destroy();\\n\\t\\t\\temblaApi = null;\\n\\t\\t}\\n\\t});\\n\\n\\texport function setSlide({ index }) {\\n\\t\\tif (emblaApi) {\\n\\t\\t\\temblaApi.scrollTo(index, true);\\n\\t\\t}\\n\\t}\\n\\n\\t// -------------------------\\n\\t// Methods\\n\\t// -------------------------\\n\\n\\tfunction handleCloseCarousel(event) {\\n\\t\\tevent.preventDefault();\\n\\n\\t\\t// programmatically navigate to the href\\n\\t\\tgoto('/', {\\n\\t\\t\\tnoScroll: true\\n\\t\\t});\\n\\n\\t\\tdispatch('setCarouselOpen', false);\\n\\t\\tdocument.body.style.overflow = 'initial';\\n\\t}\\n\\n\\tfunction handlePrevious() {\\n\\t\\tif (emblaApi) {\\n\\t\\t\\temblaApi.scrollPrev();\\n\\t\\t}\\n\\t}\\n\\n\\tfunction handleNext() {\\n\\t\\tif (emblaApi) {\\n\\t\\t\\temblaApi.scrollNext();\\n\\t\\t}\\n\\t}\\n<\/script>\\n\\n<div\\n\\tclass=\\"carousel fixed top-0 left-0 w-full h-full bg-white flex flex-col {carouselOpen\\n\\t\\t? 'open'\\n\\t\\t: ''} {carouselInit ? 'carousel-init' : ''}\\"\\n>\\n\\t<div\\n\\t\\tclass=\\"carousel-header flex-none relative flex justify-between lg:justify-center items-center px-4 lg:px-base-1/2 py-4 lg:py-base\\"\\n\\t>\\n\\t\\t<div class=\\"lg:hidden flex items-center gap-4 w-1/4\\">\\n\\t\\t\\t<button class=\\"prev arrow\\" on:click={handlePrevious}>\\n\\t\\t\\t\\t<span class=\\"sr-only\\">Previous</span>\\n\\t\\t\\t\\t<LeftArrow />\\n\\t\\t\\t</button>\\n\\n\\t\\t\\t<button class=\\"next arrow\\" on:click={handleNext}>\\n\\t\\t\\t\\t<span class=\\"sr-only\\">Next</span>\\n\\t\\t\\t\\t<RightArrow />\\n\\t\\t\\t</button>\\n\\t\\t</div>\\n\\n\\t\\t<p class=\\"indexes w-1/2 lg:w-auto flex justify-center items-center\\">\\n\\t\\t\\t<span>{currentIndex}</span><span>/{imageItems.length}</span>\\n\\t\\t</p>\\n\\n\\t\\t<div class=\\"lg:absolute lg:right-[2.7rem] w-1/4 lg:w-auto flex justify-end items-center\\">\\n\\t\\t\\t<a\\n\\t\\t\\t\\thref=\\"/\\"\\n\\t\\t\\t\\tclass=\\"closer lg:hover:text-primary transition-colors duration-300\\"\\n\\t\\t\\t\\ton:click={handleCloseCarousel}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<span class=\\"sr-only\\">Close</span>\\n\\t\\t\\t\\t<XAlt />\\n\\t\\t\\t</a>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\"flex-1 flex items-center justify-center relative\\">\\n\\t\\t<button\\n\\t\\t\\tclass=\\"prev arrow hidden lg:block absolute left-base top-1/2 -translate-y-1/2 z-10\\"\\n\\t\\t\\ton:click={handlePrevious}\\n\\t\\t>\\n\\t\\t\\t<span class=\\"sr-only\\">Previous</span>\\n\\t\\t\\t<LeftArrow />\\n\\t\\t</button>\\n\\n\\t\\t<button\\n\\t\\t\\tclass=\\"next arrow hidden lg:block absolute right-base top-1/2 -translate-y-1/2 z-10\\"\\n\\t\\t\\ton:click={handleNext}\\n\\t\\t>\\n\\t\\t\\t<span class=\\"sr-only\\">Next</span>\\n\\t\\t\\t<RightArrow />\\n\\t\\t</button>\\n\\n\\t\\t<div class=\\"h-full flex-1 relative\\">\\n\\t\\t\\t<div class=\\"embla\\" bind:this={emblaEl}>\\n\\t\\t\\t\\t<div class=\\"embla__container\\">\\n\\t\\t\\t\\t\\t{#each imageItems as item}\\n\\t\\t\\t\\t\\t\\t<div class=\\"embla__slide relative\\">\\n\\t\\t\\t\\t\\t\\t\\t<figure class=\\"fill-parent px-4 lg:p-0\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<img\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tloading=\\"lazy\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-srcset={item.imageData.srcset}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsizes={item.imageData.sizes}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\talt={item.alt}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"lazyload media-contain\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t</figure>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\"captions flex-none py-8 lg:py-base px-4 lg:px-base-1/2 text-center\\">\\n\\t\\t{#if imageItems[currentIndex - 1].text}\\n\\t\\t\\t<PortableText value={imageItems[currentIndex - 1].text} {components} />\\n\\t\\t{/if}\\n\\t</div>\\n\\n\\t<div class=\\"grid-system fill-parent flex justify-between z-[-1] pointer-events-none\\">\\n\\t\\t<div class=\\"w-base-1/2 h-full bg-grey-1\\"></div>\\n\\t\\t<div class=\\"w-base-1/2 h-full bg-grey-1\\"></div>\\n\\t\\t<div class=\\"w-base-1/2 h-full bg-grey-1\\"></div>\\n\\t\\t<div class=\\"w-base-1/2 h-full bg-grey-1\\"></div>\\n\\t\\t<div class=\\"w-base-1/2 h-full bg-grey-1\\"></div>\\n\\t\\t<div class=\\"w-base-1/2 h-full bg-grey-1\\"></div>\\n\\t\\t<div class=\\"w-base-1/2 h-full bg-grey-1\\"></div>\\n\\t\\t<div class=\\"w-base-1/2 h-full bg-grey-1\\"></div>\\n\\t\\t<div class=\\"w-base-1/2 h-full bg-grey-1\\"></div>\\n\\t\\t<div class=\\"w-base-1/2 h-full bg-grey-1\\"></div>\\n\\t\\t<div class=\\"w-base-1/2 h-full bg-grey-1\\"></div>\\n\\t\\t<div class=\\"w-base-1/2 h-full bg-grey-1\\"></div>\\n\\t\\t<div class=\\"w-base-1/2 h-full bg-grey-1\\"></div>\\n\\t</div>\\n</div>\\n\\n<style lang=\\"postcss\\">\\n\\t.carousel {\\n\\t\\tz-index: 5000;\\n\\t\\topacity: 0;\\n\\t\\ttransition: opacity 0.3s;\\n\\t\\tpointer-events: none;\\n\\t}\\n\\n\\t.carousel.open {\\n\\t\\topacity: 1;\\n\\t\\tpointer-events: auto;\\n\\t}\\n\\n\\t.closer :global(svg) {\\n\\t\\twidth: 1.8rem;\\n\\n\\t\\t@media screen and (min-width: 1024px) {\\n\\t\\t\\twidth: 2.5rem;\\n\\t\\t}\\n\\t}\\n\\n\\t.arrow {\\n\\t\\ttransition: color 0.3s;\\n\\t}\\n\\n\\t.arrow :global(svg) {\\n\\t\\twidth: 1.5rem;\\n\\n\\t\\t@media screen and (min-width: 1024px) {\\n\\t\\t\\twidth: 3rem;\\n\\t\\t}\\n\\t}\\n\\n\\t@media screen and (min-width: 1024px) {\\n\\t\\t.arrow:hover {\\n\\t\\t\\tcolor: var(--primary);\\n\\t\\t}\\n\\t}\\n\\n\\t.indexes,\\n\\t.captions {\\n\\t\\topacity: 0;\\n\\t\\ttransition: opacity 0.3s;\\n\\t}\\n\\n\\t.embla {\\n\\t\\toverflow: hidden;\\n\\t\\tposition: absolute;\\n\\t\\ttop: 0px;\\n\\t\\tleft: 0px;\\n\\t\\twidth: 100%;\\n\\t\\theight: 100%;\\n\\t\\topacity: 0;\\n\\t\\ttransition: opacity 0.3s;\\n\\t}\\n\\n\\t.carousel.carousel-init .embla,\\n\\t.carousel.carousel-init .captions,\\n\\t.carousel.carousel-init .indexes {\\n\\t\\topacity: 1;\\n\\t}\\n\\n\\t.embla__container {\\n\\t\\tdisplay: flex;\\n\\t\\tposition: absolute;\\n\\t\\ttop: 0px;\\n\\t\\tleft: 0px;\\n\\t\\twidth: 100%;\\n\\t\\theight: 100%;\\n\\t}\\n\\n\\t.embla__slide {\\n\\t\\tflex: 0 0 100%;\\n\\t\\tmin-width: 0;\\n\\t\\tmargin-right: 15vw;\\n\\t\\tmargin-left: 15vw;\\n\\n\\t\\t@media screen and (min-width: 1024px) {\\n\\t\\t\\tmargin-right: 0;\\n\\t\\t\\tmargin-left: 0;\\n\\t\\t}\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAkPC,qCAAU,CACT,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,IAAI,CACxB,cAAc,CAAE,IACjB,CAEA,SAAS,iCAAM,CACd,OAAO,CAAE,CAAC,CACV,cAAc,CAAE,IACjB,CAEA,qBAAO,CAAS,GAAK,CACpB,KAAK,CAAE,MAAM,CAEb,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAC,CAAC;AACxC,GAAG,OAAO,MAAM;AAChB,GACC,CAEA,kCAAO,CACN,UAAU,CAAE,KAAK,CAAC,IACnB,CAEA,oBAAM,CAAS,GAAK,CACnB,KAAK,CAAE,MAAM,CAEb,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAC,CAAC;AACxC,GAAG,OAAO,IAAI;AACd,GACC,CAEA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACrC,kCAAM,MAAO,CACZ,KAAK,CAAE,IAAI,SAAS,CACrB,CACD,CAEA,oCAAQ,CACR,qCAAU,CACT,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,IACrB,CAEA,kCAAO,CACN,QAAQ,CAAE,MAAM,CAChB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,IACrB,CAEA,SAAS,4BAAc,CAAC,oBAAM,CAC9B,SAAS,4BAAc,CAAC,uBAAS,CACjC,SAAS,4BAAc,CAAC,sBAAS,CAChC,OAAO,CAAE,CACV,CAEA,6CAAkB,CACjB,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IACT,CAEA,yCAAc,CACb,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CACd,SAAS,CAAE,CAAC,CACZ,YAAY,CAAE,IAAI,CAClB,WAAW,CAAE,IAAI,CAEjB,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAC,CAAC;AACxC,GAAG,cAAc,CAAC;AAClB,GAAG,aAAa,CAAC;AACjB,GACC"}`
};
const HomeCarousel = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { carouselOpen, imageItems, detail } = $$props;
  createEventDispatcher();
  let emblaEl;
  let currentIndex = 1;
  onDestroy(() => {
  });
  function setSlide({ index }) {
  }
  if ($$props.carouselOpen === void 0 && $$bindings.carouselOpen && carouselOpen !== void 0)
    $$bindings.carouselOpen(carouselOpen);
  if ($$props.imageItems === void 0 && $$bindings.imageItems && imageItems !== void 0)
    $$bindings.imageItems(imageItems);
  if ($$props.detail === void 0 && $$bindings.detail && detail !== void 0)
    $$bindings.detail(detail);
  if ($$props.setSlide === void 0 && $$bindings.setSlide && setSlide !== void 0)
    $$bindings.setSlide(setSlide);
  $$result.css.add(css$1);
  return `<div class="${"carousel fixed top-0 left-0 w-full h-full bg-white flex flex-col " + escape(carouselOpen ? "open" : "", true) + " " + escape("", true) + " svelte-rvfxct"}"><div class="carousel-header flex-none relative flex justify-between lg:justify-center items-center px-4 lg:px-base-1/2 py-4 lg:py-base"><div class="lg:hidden flex items-center gap-4 w-1/4"><button class="prev arrow svelte-rvfxct"><span class="sr-only" data-svelte-h="svelte-z31jm6">Previous</span> ${validate_component(LeftArrow, "LeftArrow").$$render($$result, {}, {}, {})}</button> <button class="next arrow svelte-rvfxct"><span class="sr-only" data-svelte-h="svelte-xiiv6y">Next</span> ${validate_component(RightArrow, "RightArrow").$$render($$result, {}, {}, {})}</button></div> <p class="indexes w-1/2 lg:w-auto flex justify-center items-center svelte-rvfxct"><span>${escape(currentIndex)}</span><span>/${escape(imageItems.length)}</span></p> <div class="lg:absolute lg:right-[2.7rem] w-1/4 lg:w-auto flex justify-end items-center"><a href="/" class="closer lg:hover:text-primary transition-colors duration-300 svelte-rvfxct"><span class="sr-only" data-svelte-h="svelte-1pewzs3">Close</span> ${validate_component(XAlt, "XAlt").$$render($$result, {}, {}, {})}</a></div></div> <div class="flex-1 flex items-center justify-center relative"><button class="prev arrow hidden lg:block absolute left-base top-1/2 -translate-y-1/2 z-10 svelte-rvfxct"><span class="sr-only" data-svelte-h="svelte-z31jm6">Previous</span> ${validate_component(LeftArrow, "LeftArrow").$$render($$result, {}, {}, {})}</button> <button class="next arrow hidden lg:block absolute right-base top-1/2 -translate-y-1/2 z-10 svelte-rvfxct"><span class="sr-only" data-svelte-h="svelte-xiiv6y">Next</span> ${validate_component(RightArrow, "RightArrow").$$render($$result, {}, {}, {})}</button> <div class="h-full flex-1 relative"><div class="embla svelte-rvfxct"${add_attribute("this", emblaEl, 0)}><div class="embla__container svelte-rvfxct">${each(imageItems, (item) => {
    return `<div class="embla__slide relative svelte-rvfxct"><figure class="fill-parent px-4 lg:p-0"><img loading="lazy"${add_attribute("data-srcset", item.imageData.srcset, 0)}${add_attribute("sizes", item.imageData.sizes, 0)}${add_attribute("alt", item.alt, 0)} class="lazyload media-contain"></figure> </div>`;
  })}</div></div></div></div> <div class="captions flex-none py-8 lg:py-base px-4 lg:px-base-1/2 text-center svelte-rvfxct">${imageItems[currentIndex - 1].text ? `${validate_component(PortableText, "PortableText").$$render(
    $$result,
    {
      value: imageItems[currentIndex - 1].text,
      components
    },
    {},
    {}
  )}` : ``}</div> <div class="grid-system fill-parent flex justify-between z-[-1] pointer-events-none" data-svelte-h="svelte-1ifihu2"><div class="w-base-1/2 h-full bg-grey-1"></div> <div class="w-base-1/2 h-full bg-grey-1"></div> <div class="w-base-1/2 h-full bg-grey-1"></div> <div class="w-base-1/2 h-full bg-grey-1"></div> <div class="w-base-1/2 h-full bg-grey-1"></div> <div class="w-base-1/2 h-full bg-grey-1"></div> <div class="w-base-1/2 h-full bg-grey-1"></div> <div class="w-base-1/2 h-full bg-grey-1"></div> <div class="w-base-1/2 h-full bg-grey-1"></div> <div class="w-base-1/2 h-full bg-grey-1"></div> <div class="w-base-1/2 h-full bg-grey-1"></div> <div class="w-base-1/2 h-full bg-grey-1"></div> <div class="w-base-1/2 h-full bg-grey-1"></div></div> </div>`;
});
const css = {
  code: ".sticky-block{position:sticky;top:var(--nav-height-mobile);@media screen and (min-width: 1024px) {\n			top: var(--nav-height);\n		}}.announcement.svelte-u2kkoi+.main-content.svelte-u2kkoi{margin-top:var(--base-spacing-half)}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n\\timport { PortableText } from '@portabletext/svelte';\\n\\timport { components, getImageData } from '$lib/utils';\\n\\timport HomeTextItem from '$lib/components/HomeTextItem.svelte';\\n\\timport HomeImageItem from '$lib/components/HomeImageItem.svelte';\\n\\timport HomeCarousel from '$lib/components/HomeCarousel.svelte';\\n\\n\\t// -------------------------\\n\\t// Data\\n\\t// -------------------------\\n\\n\\texport let data;\\n\\n\\t// get site settings from data\\n\\tconst { siteSettings, homePage, detail } = data;\\n\\n\\t// figure out grid items\\n\\tconst gridItems = homePage?.gridItems.reduce((acc, item) => {\\n\\t\\tconst { _type } = item;\\n\\n\\t\\tif (_type === 'textBlock') {\\n\\t\\t\\tacc.push({\\n\\t\\t\\t\\tcomponent: HomeTextItem,\\n\\t\\t\\t\\t...item\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tif (_type === 'imageBlock') {\\n\\t\\t\\t// getting image data here, so we can pass into grid item AND carousel components\\n\\t\\t\\tconst imageData = getImageData(item.image);\\n\\n\\t\\t\\tacc.push({\\n\\t\\t\\t\\tcomponent: HomeImageItem,\\n\\t\\t\\t\\t...item,\\n\\t\\t\\t\\timageData\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\treturn acc;\\n\\t}, []);\\n\\n\\t// -------------------------\\n\\t// Carousel\\n\\t// -------------------------\\n\\n\\t// get all grid items that are image blocks\\n\\tconst imageItems = gridItems.filter((item) => item._type === 'imageBlock');\\n\\tlet carouselOpen = detail ? true : false;\\n\\tlet carouselComponent;\\n\\n\\tfunction openCarousel(index) {\\n\\t\\tif (carouselComponent) {\\n\\t\\t\\tdocument.body.style.overflow = 'hidden';\\n\\t\\t\\tcarouselComponent.setSlide({ index });\\n\\t\\t\\tcarouselOpen = true;\\n\\t\\t}\\n\\t}\\n\\n\\tfunction setCarouselOpen(value) {\\n\\t\\tcarouselOpen = value.detail;\\n\\t}\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>Mitchell Barton</title>\\n</svelte:head>\\n\\n<div class=\\"mt-16 pb-60\\">\\n\\t{#if siteSettings.announcement?.length > 0}\\n\\t\\t<div\\n\\t\\t\\tclass=\\"announcement w-full text-center border border-light-grey rich-text p-base-1/2 text-black\\"\\n\\t\\t>\\n\\t\\t\\t<PortableText value={siteSettings.announcement} {components} />\\n\\t\\t</div>\\n\\t{/if}\\n\\n\\t{#if homePage?.gridItems?.length > 0}\\n\\t\\t<div class=\\"main-content grid grid-cols-12 gap-x-base-1/2 gap-y-32 delay-100 items-center\\">\\n\\t\\t\\t{#each gridItems as item, index}\\n\\t\\t\\t\\t<svelte:component\\n\\t\\t\\t\\t\\tthis={item.component}\\n\\t\\t\\t\\t\\t{item}\\n\\t\\t\\t\\t\\ton:imageClicked={() => openCarousel(index)}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t{/each}\\n\\t\\t</div>\\n\\t{/if}\\n</div>\\n\\n{#if homePage?.gridItems?.length > 0}\\n\\t<HomeCarousel\\n\\t\\tbind:this={carouselComponent}\\n\\t\\t{carouselOpen}\\n\\t\\t{imageItems}\\n\\t\\ton:setCarouselOpen={setCarouselOpen}\\n\\t\\t{detail}\\n\\t/>\\n{/if}\\n\\n<style lang=\\"postcss\\">\\n\\t:global(.sticky-block) {\\n\\t\\tposition: sticky;\\n\\t\\ttop: var(--nav-height-mobile);\\n\\n\\t\\t@media screen and (min-width: 1024px) {\\n\\t\\t\\ttop: var(--nav-height);\\n\\t\\t}\\n\\t}\\n\\n\\t.announcement + .main-content {\\n\\t\\tmargin-top: var(--base-spacing-half);\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAoGS,aAAe,CACtB,QAAQ,CAAE,MAAM,CAChB,GAAG,CAAE,IAAI,mBAAmB,CAAC,CAE7B,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAC,CAAC;AACxC,GAAG,KAAK,IAAI,YAAY,CAAC;AACzB,GACC,CAEA,2BAAa,CAAG,2BAAc,CAC7B,UAAU,CAAE,IAAI,mBAAmB,CACpC"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { data } = $$props;
  const { siteSettings, homePage, detail } = data;
  const gridItems = homePage?.gridItems.reduce(
    (acc, item) => {
      const { _type } = item;
      if (_type === "textBlock") {
        acc.push({ component: HomeTextItem, ...item });
      }
      if (_type === "imageBlock") {
        const imageData = getImageData(item.image);
        acc.push({
          component: HomeImageItem,
          ...item,
          imageData
        });
      }
      return acc;
    },
    []
  );
  const imageItems = gridItems.filter((item) => item._type === "imageBlock");
  let carouselOpen = detail ? true : false;
  let carouselComponent;
  if ($$props.data === void 0 && $$bindings.data && data !== void 0)
    $$bindings.data(data);
  $$result.css.add(css);
  let $$settled;
  let $$rendered;
  let previous_head = $$result.head;
  do {
    $$settled = true;
    $$result.head = previous_head;
    $$rendered = `${$$result.head += `<!-- HEAD_svelte-zor90i_START -->${$$result.title = `<title>Mitchell Barton</title>`, ""}<!-- HEAD_svelte-zor90i_END -->`, ""} <div class="mt-16 pb-60">${siteSettings.announcement?.length > 0 ? `<div class="announcement w-full text-center border border-light-grey rich-text p-base-1/2 text-black svelte-u2kkoi">${validate_component(PortableText, "PortableText").$$render(
      $$result,
      {
        value: siteSettings.announcement,
        components
      },
      {},
      {}
    )}</div>` : ``} ${homePage?.gridItems?.length > 0 ? `<div class="main-content grid grid-cols-12 gap-x-base-1/2 gap-y-32 delay-100 items-center svelte-u2kkoi">${each(gridItems, (item, index) => {
      return `${validate_component(item.component || missing_component, "svelte:component").$$render($$result, { item }, {}, {})}`;
    })}</div>` : ``}</div> ${homePage?.gridItems?.length > 0 ? `${validate_component(HomeCarousel, "HomeCarousel").$$render(
      $$result,
      {
        carouselOpen,
        imageItems,
        detail,
        this: carouselComponent
      },
      {
        this: ($$value) => {
          carouselComponent = $$value;
          $$settled = false;
        }
      },
      {}
    )}` : ``}`;
  } while (!$$settled);
  return $$rendered;
});
export {
  Page as default
};
